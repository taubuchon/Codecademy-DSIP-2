-- Basic Requirements
-- Which tracks appeared in the most playlists? how many playlist did they appear in?
SELECT tracks.Name, COUNT(playlist_track.PlaylistId) AS "Playlists" FROM playlist_track
LEFT JOIN tracks ON tracks.TrackId = playlist_track.TrackId
GROUP BY playlist_track.TrackId
ORDER BY COUNT(playlist_track.TrackId) DESC;

-- Which track generated the most revenue? which album? which genre?
SELECT invoice_items.TrackID, tracks.Name, SUM(Invoice_Items.UnitPrice) AS "Total Revenue" FROM invoice_items
JOIN tracks ON invoice_items.TrackId = tracks.TrackId
GROUP BY invoice_items.TrackId
ORDER BY SUM(invoice_items.UnitPrice) DESC;

SELECT albums.Title, ROUND(SUM(invoice_items.UnitPrice), 2) AS "Total Revenue" FROM albums
JOIN tracks ON albums.AlbumId = tracks.AlbumId
JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId
GROUP BY albums.AlbumId
ORDER BY ROUND(SUM(invoice_items.UnitPrice), 2) DESC;

SELECT genres.Name, ROUND(SUM(invoice_items.UnitPrice), 2) AS "Total Revenue" FROM genres
JOIN tracks ON genres.GenreId = tracks.GenreId
JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId
GROUP BY genres.GenreId
ORDER BY ROUND(SUM(invoice_items.UnitPrice), 2) DESC;

-- Which countries have the highest sales revenue? What percent of total revenue does each country make up?
SELECT customers.Country, ROUND(SUM(invoice_items.UnitPrice), 2) AS "Total Revenue" FROM customers
JOIN invoices ON customers.CustomerId = invoices.CustomerId
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId
GROUP BY customers.Country
ORDER BY ROUND(SUM(invoice_items.UnitPrice), 2) DESC;
-- OR
SELECT invoices.BillingCountry, ROUND(SUM(invoice_items.UnitPrice), 2) AS "Total Revenue" FROM invoices
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId
GROUP BY invoices.BillingCountry
ORDER BY ROUND(SUM(invoice_items.UnitPrice), 2) DESC;
-- with %
SELECT invoices.BillingCountry, ROUND(SUM(invoice_items.UnitPrice), 2) AS "Total Revenue", ROUND((SUM(invoice_items.UnitPrice)/(SELECT SUM(invoice_items.UnitPrice) FROM invoice_items) * 100), 2) AS "% Revenue" FROM invoices
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId
GROUP BY invoices.BillingCountry
ORDER BY SUM(invoice_items.UnitPrice) DESC;

-- How many customers did each employee support, what is the average revenue for each sale, and what is their total sale?

SELECT employees.EmployeeId, employees.FirstName, employees.LastName, COUNT(customers.CustomerId) AS "Customers Assisted" FROM employees
LEFT JOIN customers ON employees.EmployeeId = customers.SupportRepId
GROUP BY employees.EmployeeId
ORDER BY COUNT(customers.CustomerId) DESC;

SELECT employees.EmployeeId, employees.FirstName, employees.LastName, ROUND(AVG(invoices.Total), 2) AS "Avg Sale" FROM employees
LEFT JOIN customers ON employees.EmployeeId = customers.SupportRepId
LEFT JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.EmployeeId
ORDER BY AVG(invoices.Total) DESC;

SELECT employees.EmployeeId, employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total), 2) AS "Total Sales" FROM employees
LEFT JOIN customers ON employees.EmployeeId = customers.SupportRepId
LEFT JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.EmployeeId
ORDER BY SUM(invoices.Total) DESC;